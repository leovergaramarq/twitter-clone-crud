version: '3.7'

networks:
  db-network:
    name: db-network

services:
  api:
    container_name: api
    restart: unless-stopped
    build: ./api
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://user:secret@db0:30001,db1:30002,db2:30003/twitter-clone-db
      - PORT=3000
    networks:
      - db-network
    links:
      - db0
      - db1
      - db2
    ports:
      - 3000:3000
    volumes:
      - ./api:/usr/src/app
  db2:
    hostname: db2
    container_name: db2
    image: mongo:6.0.2
    entrypoint:
      - sh
      - -c
      - |
          cp /data/replica.key.devel /data/replica.key
          chmod 400 /data/replica.key
          chown 999:999 /data/replica.key
          exec docker-entrypoint.sh $$@
    command: mongod --keyFile /data/replica.key --replSet db-rs --bind_ip_all --port 30003
    ports:
      - 30003:30003
    restart: always
    networks:
      - db-network
    volumes:
    - ./db/replica.key:/data/replica.key.devel:ro
    - ./db/data2/db:/data/db

  db1:
    hostname: db1
    container_name: db1
    image: mongo:6.0.2
    entrypoint:
      - sh
      - -c
      - |
          cp /data/replica.key.devel /data/replica.key
          chmod 400 /data/replica.key
          chown 999:999 /data/replica.key
          exec docker-entrypoint.sh $$@
    command: mongod --keyFile /data/replica.key --replSet db-rs --bind_ip_all --port 30002
    ports:
      - 30002:30002
    restart: always
    networks:
      - db-network
    volumes:
    - ./db/replica.key:/data/replica.key.devel:ro
    - ./db/data1/db:/data/db

  db0:
    hostname: db0
    container_name: db0
    image: mongo:6.0.2
    entrypoint:
      - sh
      - -c
      - |
          cp /data/replica.key.devel /data/replica.key
          chmod 400 /data/replica.key
          chown 999:999 /data/replica.key
          exec docker-entrypoint.sh $$@
    command: mongod --keyFile /data/replica.key --replSet db-rs --bind_ip_all --port 30001
    ports:
      - 30001:30001
    links:
    - db1
    - db2
    restart: always
    networks:
      - db-network
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=secret
      - MONGO_INITDB_DATABASE=twitter-clone-db
      - MONGO_USERNAME=user
      - MONGO_PASSWORD=secret
    volumes:
    - ./db/replica.key:/data/replica.key.devel:ro
    - ./db/data0/db:/data/db
  db-setup:
    container_name: db-setup
    image: mongo:6.0.2
    entrypoint: [ "/scripts/setup.sh" ]
    depends_on:
      - db0
      - db1
      - db2
    restart: on-failure
    networks:
      - db-network
    volumes:
    - ./db/scripts/setup.sh:/scripts/setup.sh:ro
    - ./db/scripts/setup-rs.sh:/scripts/setup-rs.sh:ro
    - ./db/scripts/setup-db.sh:/scripts/setup-db.sh:ro
